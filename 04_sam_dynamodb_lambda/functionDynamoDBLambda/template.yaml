AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  functionDynamoDBLambda

  Sample SAM Template for functionDynamoDBLambda
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  UserGetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: userMethods/
      Handler: app.getHandler
      Runtime: nodejs14.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "users"
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user/{id}
            Method: get
  UserGetAllFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: userMethods/
      Handler: app.getAllHandler
      Runtime: nodejs14.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "users"
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user/
            Method: get
  UserPostFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: userMethods/
      Handler: app.postHandler
      Runtime: nodejs14.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "users"
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user/
            Method: post
  UserLoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: userMethods/
      Handler: app.loginHandler
      Runtime: nodejs14.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "users"
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /user/login
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  UserDynamoDBApi:
    Description: "API Gateway endpoint URL for Prod stage for UserDynamoDB function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/user/"
  UserGetFunction:
    Description: "UserGetFunction Lambda Function ARN"
    Value: !GetAtt UserGetFunction.Arn
  UserGetFunctionIamRole:
    Description: "Implicit IAM Role created for UserGetFunction"
    Value: !GetAtt UserGetFunctionRole.Arn
  UserGetAllFunction:
    Description: "UserGetAllFunction Lambda Function ARN"
    Value: !GetAtt UserGetAllFunction.Arn
  UserGetAllFunctionIamRole:
    Description: "Implicit IAM Role created for UserGetAllFunction"
    Value: !GetAtt UserGetAllFunctionRole.Arn
  UserPostFunction:
    Description: "UserPostFunction Lambda Function ARN"
    Value: !GetAtt UserPostFunction.Arn
  UserPostFunctionIamRole:
    Description: "Implicit IAM Role created for UserPostFunction"
    Value: !GetAtt UserPostFunctionRole.Arn
  UserLoginFunction:
    Description: "UserLoginFunction Lambda Function ARN"
    Value: !GetAtt UserLoginFunction.Arn
  UserLoginFunctionIamRole:
    Description: "Implicit IAM Role created for UserLoginFunction"
    Value: !GetAtt UserLoginFunctionRole.Arn
  